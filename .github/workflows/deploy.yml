name: Deploy to Server

on:
  push:
    branches: [ main, master ]
    paths:
      - 'frontend/**'

env:
  IMAGE_NAME: frontend-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        cd frontend
        docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:${{ github.sha }} .

    - name: Save Docker image
      run: |
        cd frontend
        docker save $IMAGE_NAME:latest | gzip > frontend-image.tar.gz

    - name: Deploy to server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        source: "frontend/frontend-image.tar.gz"
        target: "/tmp/"

    - name: Run on server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Загружаем образ
          docker load -i /tmp/frontend-image.tar.gz
          
          # Останавливаем старый контейнер если существует
          docker stop frontend-container || true
          docker rm frontend-container || true
          
          # Запускаем новый контейнер
          docker run -d \
            --name frontend-container \
            --restart unless-stopped \
            -p 3000:3000 \
            -e NODE_ENV=production \
            frontend-app:latest
          
          # Очищаем
          rm /tmp/frontend-image.tar.gz
          docker system prune -f

    - name: Cleanup
      run: rm -f frontend/frontend-image.tar.gz